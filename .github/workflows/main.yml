on:
  push:
    branches:
      - main
  workflow_dispatch :
env:
  REGISTRY_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  Docker_Name : projetdevopsg1
  env_name : envgrp1-v2
  location : francecentral

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Dockerfile linting
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ env.AZURE_CREDENTIALS }}
    - name: Login to ACR
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - name: Build and push image
      run: |
        docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.Docker_Name }}:v1
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.Docker_Name }}:v1

    - name: Login to ACR
      run: az acr login --name ${{ env.REGISTRY_LOGIN_SERVER }}

    - name: Check if environment exists
      id: check_env
      continue-on-error: true
      run: az containerapp env show -n ${{ env.env_name }} -g ${{ env.RESOURCE_GROUP }}
    
    - name: Create Azure container environment
      run: |
        if [ "${{ steps.check_env.outcome }}" == "failure" ]; then
          az containerapp env create -n ${{ env.env_name }} -g ${{ env.RESOURCE_GROUP }} --location ${{ env.location }}
        fi

    - name: Deploy to Azure Container
      run: |
        az containerapp create --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.env_name }} --image ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.Docker_Name }}:v1 --cpu 1 --memory 2 --registry-server ${{ secrets.REGISTRY_LOGIN_SERVER }} --registry-username ${{ secrets.REGISTRY_USERNAME }} --registry-password ${{ secrets.REGISTRY_PASSWORD }} --ingress external --target-port 5000 --environment ${{ env.env_name}}

    - name: Set autoscaling rules
      run: |
        az containerapp update --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ env.env_name }} --max-replicas 300 --scale-rule-name http-scaling --scale-rule-http-concurrency 1


    
